{"version":3,"sources":["webpack:///./src/app/general.service.ts","webpack:///./src/app/views/profile/profile-routing.module.ts","webpack:///./src/app/views/profile/profile.component.html","webpack:///./src/app/views/profile/profile.component.ts","webpack:///./src/app/views/profile/profile.module.ts"],"names":[],"mappings":"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","file":"views-profile-profile-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap} from 'rxjs/operators'; \n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneralService { \n\n  private apiUrl = \"http://localhost:3000/api/users\";\n  constructor(\n  \tprivate http: HttpClient\n  \t) { }\n  /* GET HomePage details*/\n  getHomePageInfo (): Observable<Object> {\n  \treturn this.http.get<Object>(this.apiUrl)\n  \t.pipe(\n  \t\ttap(data => {\n  \t\t\treturn data;\n  \t\t}),\n  \t\tcatchError(this.handleError<Object>('Error'))\n  \t\t);\n  }  \n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfileComponent } from './profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileComponent,\n    data: {\n      title: 'Profile'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule {}\n","module.exports = \"<div  class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Profile</strong>\\n          <small>Picture</small>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\" style=\\\"text-align: center;\\\">\\n            \\t<img src=\\\"assets/img/avatars/8.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"Profile Picture\\\" width=\\\"200\\\" height=\\\"200\\\"/>\\n            </div>\\n          </div><!--/.row-->\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button type=\\\"browse\\\" class=\\\"btn btn-sm btn-info\\\"><i class=\\\"fa fa-ban\\\"></i> Change Profile Picture </button>\\n           <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"saveProfilePictureModal.show()\\\" ><i class=\\\"fa fa-dot-circle-o\\\"></i> Save Changes</button>\\n        </div>\\n      </div>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Api</strong>\\n          <small>Route</small>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <h1>{{testVar.name}}</h1>\\n          <h2>{{testVar.message}}</h2>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          \\n        </div>\\n      </div>\\n    </div><!--/.col-->\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Edit</strong>\\n          <small>Profile</small>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">Username</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Enter your user name\\\" value=\\\"micheal123\\\">\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-6\\\">\\n              <label for=\\\"first-name\\\">First Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" placeholder=\\\"Enter First Name\\\" value=\\\"Micheal\\\">\\n            </div>\\n            <div class=\\\"form-group col-sm-6\\\">\\n              <label for=\\\"second-name\\\">Second Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"second-name\\\" placeholder=\\\"Second Name\\\" value=\\\"Dany Rand\\\">\\n            </div>\\n          </div><!--/.row-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Enter your Email\\\" value=\\\"micheal123@gmail.com\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"savePersonalInfoModal.show()\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i> Save Changes</button>\\n        </div>\\n      </div>\\n    </div><!--/.col-->\\n  </div><!--/.row-->\\n\\n  <div bsModal #saveProfilePictureModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-info\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Save Profile Picture</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"saveProfilePictureModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Click Save to save  <strong>Profile Picture</strong> or <strong>Cancel</strong> to abort this modal&hellip;</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"saveProfilePictureModal.hide()\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\">Save changes</button>\\n      </div>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\\n\\n\\n\\n<div bsModal #savePersonalInfoModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-info\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Save Personal Information</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"savePersonalInfoModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Click Save to save <strong>Personal Information</strong> or <strong>Cancel</strong> to abort this modal&hellip;</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"savePersonalInfoModal.hide()\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\">Save changes</button>\\n      </div>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { GeneralService } from './../../general.service';\n\n@Component({\n  templateUrl: 'profile.component.html'\n})\n\nexport class ProfileComponent  {\n  \n  public saveProfilePictureModal;\n  public savePersonalInfoModal;\n\n  public testVar: Object = {name:'Angular', message: 'Error reaching server'};\n\n    constructor(private generalService: GeneralService) { }\n\n      ngOnInit() {\n        if (this.testVar) {\n          this.generalService.getHomePageInfo()\n        .subscribe(data => {\n          this.testVar = data\n       //   console.log(this.testVar);\n        })\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n\nimport { ProfileComponent } from './profile.component';\nimport { ProfileRoutingModule } from './profile-routing.module';\n\n@NgModule({\n  imports: [\n    ProfileRoutingModule,\n    ModalModule.forRoot()\n  ],\n  declarations: [ ProfileComponent ]\n})\nexport class ProfileModule { }\n"],"sourceRoot":""}